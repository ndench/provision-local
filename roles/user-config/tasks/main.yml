---

- name: read ssh public key for github
  shell: cat "{{ ansible_env.HOME }}/.ssh/id_rsa.pub"
  register: ssh_pub_key

- name: add ssh public key to github
  github_key:
    name: "{{ ansible_hostname }}"
    token: "{{ github_token }}"
    pubkey: "{{ ssh_pub_key.stdout }}"

- name: copy rcm config
  copy:
    src: home/rcrc
    dest: "{{ ansible_env.HOME }}/.rcrc"

- name: clone dotfiles repo
  git:
    repo: "{{ dotfiles_repo }}"
    dest: "{{ ansible_env.HOME }}/.dotfiles"
    accept_hostkey: yes

- name: run rcup
  command: rcup -t new-dotfiles
  register: rcresult
  failed_when: rcresult.stdout != ""

- name: create .aws directory
  file:
    dest: "{{ ansible_env.HOME }}/.aws"
    state: directory

- name: copy aws credentials
  copy:
    src: home/aws/credentials
    dest: "{{ ansible_env.HOME }}/.aws/credentials"
    mode: 0600

- name: copy wakatime config
  copy:
    src: home/wakatime.cfg
    dest: "{{ ansible_env.HOME }}/.wakatime.cfg"
    mode: 0600

- name: create .docker directory
  file:
    dest: "{{ ansible_env.HOME }}/.docker"
    state: directory

- name: copy docker config
  copy:
    src: home/docker/config.json
    dest: "{{ ansible_env.HOME }}/.docker/config.json"
    mode: 0600

- name: copy hub config
  copy:
    src: home/config/hub
    dest: "{{ ansible_env.HOME }}/.config/hub"
    mode: 0600

- name: create .ngrok2 directory
  file:
    dest: "{{ ansible_env.HOME }}/.ngrok2"
    state: directory

- name: copy ngrok config
  copy:
    src: home/ngrok2/ngrok.yml
    dest: "{{ ansible_env.HOME }}/.ngrok2/ngrok.yml"
    mode: 0600

- name: enable redshift
  systemd:
    name: redshift
    scope: user
    state: started
    enabled: yes
